    <class name="wraplayout" extends="layout" type="coffee">
      <attribute name="inset" type="number" value="0"></attribute>
      <attribute name="spacing" type="number" value="15"></attribute>
      <attribute name="axis" type="string" value="width"></attribute>
      <handler name="oninit">
        # console.log('oninit', this)
        @listenTo(@parent, @axis, @update)
      </handler>
      <handler name="oninset" args="inset">
        # console.log('oninset', inset)
        @update()
      </handler>
      <handler name="onaxis" args="axis">
        # console.log('onaxis', axis)
        @otheraxis = if axis == 'height' then 'width' else 'height'
        @attr = if axis == 'height' then 'y' else 'x'
        @otherattr = if @attr == 'x' then 'y' else 'x'
        @update()
      </handler>
      <handler name="onsubview" args="subview">
        # console.log('onsubview', @axis, @update, subview, this)
        @listenTo(subview, @axis, @update)
      </handler>
      <setter name="spacing" args="spacing">
        # console.log('spacing setter', spacing, this)
        @update()
      </setter>
      <method name="update" args="value, sender">
        # console.log('skip', @skip(), @locked)
        return if @skip()
        locked = @locked
        @locked = true
        pos = @inset
        otherpos = 0
        maxsize = 0
        sizelimit = @parent[@axis]
        for subview, index in @parent.subviews
          continue if subview.ignorelayout

          subview.setAttribute(@attr, pos) unless subview[@attr] == pos
          subview.setAttribute(@otherattr, otherpos) unless subview[@otherattr] == otherpos
          # console.log 'value', pos, @spacing, @inset, @attr, @axis, subview, subview[@axis]
          pos += @spacing + subview[@axis]
          maxsize = subview[@otheraxis] + @spacing if (subview[@otheraxis] + @spacing) > maxsize
          nextview = @parent.subviews[index + 1]
          nextpos = pos + if nextview then nextview[@axis] else 0
          if nextpos > sizelimit
            #console.log 'over size limit', pos, sizelimit, index
            pos = @inset
            otherpos += maxsize
            maxsize = 0

        @locked = locked
        return pos
      </method>
    </class>